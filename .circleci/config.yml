# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define jobs to be invoked later in a workflow.
jobs:
  # Backend tests and linting
  backend-test:
    docker:
      - image: cimg/node:18.17 # NodeJS environment for backend tests and linting
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: "cd BACKEND && npm install"
      - run:
          name: "Run Backend Tests"
          command: "cd BACKEND && npm test"
      - run:
          name: "Run Lint"
          command: "cd BACKEND && npm run lint"

  # Frontend tests and linting
  frontend-test:
    docker:
      - image: cimg/node:18.17 # NodeJS environment for frontend tests and linting
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: "cd FRONTEND && npm install"
      - run:
          name: "Run Frontend Tests"
          command: "cd FRONTEND && npm test"
      - run:
          name: "Run Lint"
          command: "cd FRONTEND && npm run lint"

  # SonarQube Analysis Job
  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run: |
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: " $SONAR_BRANCH
          echo "Sonar org value is : " $SONAR_ORG
          sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="BACKEND,FRONTEND"

  # Job to deploy backend to a staging environment
  deploy-backend:
    docker:
      - image: cimg/node:18.17 # NodeJS environment for backend
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: "cd BACKEND && npm install"
      - run:
          name: "Deploy Backend to Staging"
          command: "cd BACKEND && npm run deploy:staging"

  # Job to deploy frontend to a staging environment
  deploy-frontend:
    docker:
      - image: cimg/node:18.17 # NodeJS environment for frontend
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: "cd FRONTEND && npm install"
      - run:
          name: "Build Frontend"
          command: "cd FRONTEND && npm run build"
      - run:
          name: "Deploy Frontend to Staging"
          command: "cd FRONTEND && npm run deploy:staging"

# Orchestrate jobs using workflows
workflows:
  ci-workflow:
    jobs:
      - backend-test
      - frontend-test
      - sonarqube
      - deploy-backend:
          requires:
            - backend-test
            - sonarqube
      - deploy-frontend:
          requires:
            - frontend-test
            - sonarqube
