version: 2.1

jobs:
  # Job for backend testing and setup
  backend-setup:
    docker:
      - image: cimg/node:current
    working_directory: ~/project/backend  # Set the working directory to backend
    steps:
      - checkout
      - run:
          name: "Install Backend Dependencies"
          command: "npm install"  # Install dependencies
      - run:
          name: "Start Backend Server"
          command: "npm start &"  # Start backend server in background
          background: true
      - run:
          name: "Run Basic Backend Tests"
          command: |
            echo "Testing backend endpoints..."
            curl --fail http://localhost:3001/users/login || (echo "Login endpoint failed!" && exit 1)
            curl --fail http://localhost:3001/payments || (echo "Payments endpoint failed!" && exit 1)
            curl --fail http://localhost:3001/employee/payments || (echo "Employee payments endpoint failed!" && exit 1)
            echo "Backend tests completed successfully."

  # Job for frontend testing and setup
  frontend-setup:
    docker:
      - image: cimg/node:current
    working_directory: ~/project/frontend  # Set the working directory to frontend
    steps:
      - checkout
      - run:
          name: "Install Frontend Dependencies"
          command: "npm install"  # Install dependencies
      - run:
          name: "Start Frontend Server"
          command: "npm start &"  # Start frontend server in background
          background: true
      - run:
          name: "Check Frontend Status"
          command: |
            echo "Checking frontend status..."
            curl --fail http://localhost:3000 || (echo "Frontend failed to start!" && exit 1)
            echo "Frontend is running successfully."

  # SonarQube analysis
  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    working_directory: ~/project
    steps:
      - checkout
      - run: find .
      - attach_workspace:
          at: ~/workspace
      - run: |
          echo "Starting SonarQube analysis..."
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: " $SONAR_BRANCH
          sonar-scanner \
          -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
          -Dsonar.organization="$SONAR_ORG" \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login="$SONAR_TOKEN" \
          -Dsonar.branch.name="$SONAR_BRANCH" \
          -Dsonar.sources="."

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - backend-setup
      - frontend-setup
      - sonarqube:
          requires:
            - backend-setup
            - frontend-setup
