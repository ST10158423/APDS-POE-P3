version: 2.1

jobs:
  install-dependencies:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: "Install Backend Dependencies"
          working_directory: ~/BACKEND
          command: |
            if [ -f package.json ]; then
              npm install
            else
              echo "Backend package.json not found!"
              exit 1
            fi
      - run:
          name: "Install Frontend Dependencies"
          working_directory: ~/frontend
          command: |
            if [ -f package.json ]; then
              npm install
            else
              echo "Frontend package.json not found!"
              exit 1
            fi

  backend-tests:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: "Run Backend Tests"
          working_directory: ~/BACKEND
          command: |
            if [ -f package.json ]; then
              npm test
            else
              echo "Backend package.json not found!"
              exit 1
            fi

  frontend-tests:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: "Run Frontend Tests"
          working_directory: ~/frontend
          command: |
            if [ -f package.json ]; then
              npm test
            else
              echo "Frontend package.json not found!"
              exit 1
            fi

  lint:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: "Lint Backend Code"
          working_directory: ~/BACKEND
          command: |
            if [ -f package.json ]; then
              npm run lint
            fi
      - run:
          name: "Lint Frontend Code"
          working_directory: ~/frontend
          command: |
            if [ -f package.json ]; then
              npm run lint
            fi

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    steps:
      - checkout
      - run: find .
      - run: |
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          sonar-scanner \
          -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
          -Dsonar.organization="$SONAR_ORG" \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.exclusions="**/android/**,**/ios/**" \
          -Dsonar.login="$SONAR_TOKEN" \
          -Dsonar.branch.name="$SONAR_BRANCH" \
          -Dsonar.sources="."

workflows:
  build-test-analyze:
    jobs:
      - install-dependencies
      - backend-tests:
          requires:
            - install-dependencies
      - frontend-tests:
          requires:
            - install-dependencies
      - lint:
          requires:
            - backend-tests
            - frontend-tests
      - sonarqube:
          requires:
            - lint
